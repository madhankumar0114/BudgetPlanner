package com.example.demo.controller;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.example.demo.entity.Credentials;
import com.example.demo.entity.Expense;
import com.example.demo.entity.User;
import com.example.demo.repo.CredentialsRepository;
import com.example.demo.repo.ExpenseRepository;
import com.example.demo.repo.UserRepository;

@Controller
public class LoginController {

	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	private int userId;

	@Autowired
	private CredentialsRepository credentialsRepository;

	@Autowired
	private ExpenseRepository expenseRepository;

	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String first(ModelMap model) {
		return ("sign_in");
	}

	@PostMapping(value = "/sign_in")
	public String login(@RequestParam(value = "username") String userName,
			@RequestParam(value = "psw") String password) {
		User user = userRepository.findByUsername(userName);
		if (user == null) {
			return ("error");
		}

		userId = user.getId();
		return ("home");
	}

	@RequestMapping(value = "/sign_up", method = RequestMethod.GET)
	public String signUp(ModelMap model) {
		return ("sign_up");
	}

	@RequestMapping(value = "/create_user", method = RequestMethod.POST)
	public String createUser(@RequestParam(value = "username") String userName,
			@RequestParam(value = "firstname") String firstName, @RequestParam(value = "lastname") String lastName,
			@RequestParam(value = "phone") String phone, @RequestParam(value = "email") String email,
			@RequestParam(value = "psw") String password, @RequestParam(value = "pswrepeat") String repeatPassword) {
		if (!password.equals(repeatPassword)) {
			return ("error_pwd_mismatch");
		}

		if (userRepository.findByUsername(userName) != null) {
			return ("error_user_exists");
		}
		User user = new User();
		user.setFirstName(firstName);
		user.setLastName(lastName);
		user.setUsername(userName);
		user.setPhone(phone);
		user.setEmail(email);

		Credentials credentials = new Credentials();
		credentials.setUsername(userName);
		credentials.setPassword(password);

		userRepository.save(user);
		credentialsRepository.save(credentials);

		userId = user.getId();
		System.out.println("Saved");

		return ("home");
	}

	@RequestMapping(value = "/forgot", method = RequestMethod.GET)
	public String showforgotpage(ModelMap model) {
		return ("forgot");
	}

	@RequestMapping(value = "/profile", method = RequestMethod.GET)
	public String showprofilepage(ModelMap model) {
		return ("profile");
	}

	@RequestMapping(value = "/future_expense", method = RequestMethod.GET)
	public String future_expense(ModelMap model) {
		return ("future_expense");
	}

	@RequestMapping(value = "/past_expense", method = RequestMethod.GET)
	public String showpast_expensepage(ModelMap model) {
		return ("past_expense");
	}

	@RequestMapping(value = "/home", method = RequestMethod.GET)
	public String showhomepage(ModelMap model) {
		return ("home");
	}

//	  @RequestMapping(value = "/sign_in", method = RequestMethod.POST)
//	 
//	  public String showhomepage(@RequestParam(value = "uname") String userName,
//	 
//	 @RequestParam(value = "pwd") String password) { String name = "Madhan";
//	  
//	  String email = "madhan@gmail.com"; User n = new User(); n.setName(name);
//	  n.setEmail(email); userRepository.save(n); System.out.println("Saved");
//	  return ("home"); }

	@RequestMapping(value = "/calendar", method = RequestMethod.GET)
	public String showcalendarpage(ModelMap model) {
		return ("calendar");
	}

	@RequestMapping(value = "/calculator", method = RequestMethod.GET)
	public String showcalculatorpage(ModelMap model) {
		return ("calculator");
	}

	@GetMapping(path = "/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		return userRepository.findAll();
	}

//	@RequestMapping(value = "/create_expense", method = RequestMethod.POST)
//	public String showtoday_expensepage(@RequestParam(value = "expensename") String expenseName,
//
//			@RequestParam(value = "expensetype") String expenseType, @RequestParam(value = "amount") int amount,
//
//			@RequestParam(value = "date") Date date) {
//		Expense expense = new Expense();
//		expense.setExpenseName(expenseName);
//		expense.setExpenseType(expenseType);
//		expense.setAmount(amount);
//		expense.setDate(date);
//		expenseRepository.save(expense);
//
//		return ("today_expense");
//	}

	// today expense

	@PostMapping("/create_expense")
	public ModelAndView welcome(@RequestParam(value = "expensename") String expenseName,
			@RequestParam(value = "expensetype") String expenseType, @RequestParam(value = "amount") double amount) {
		LocalDate today = LocalDate.now();
		// create entity
		// save entity
		// List<Expense> expenses = repository.findByuseridAndDate(userId,today)
		// model.addObject("expenses",expenses);
		if (userId == 0) {
			userId = 1;
		}

		ModelAndView model = new ModelAndView("/today_expense");
		List<Expense> expenses = expenseRepository.findByUserIdAndDate(userId, today);
		model.addObject("expenses", expenses);

		if (expenseName == null || expenseName.isBlank()) {
			return model;
		}

		Expense expense = new Expense();
		expense.setExpenseName(expenseName);
		expense.setExpenseType(expenseType);
		expense.setAmount(amount);
		expense.setDate(today);
		expense.setUserId(userId);
		expenseRepository.save(expense);

		expenses.add(expense);

		return model;
	}

	@RequestMapping(value = "/today_expense", method = RequestMethod.GET)
	public String today_expense(ModelMap model) {
		return ("today_expense");
	}

}
